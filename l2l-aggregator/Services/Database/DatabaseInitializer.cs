using Dapper;
using FirebirdSql.Data.FirebirdClient;
using System;
using System.IO;

namespace l2l_aggregator.Services.Database
{
    public class DatabaseInitializer
    {
        private readonly string _databasePath;
        private readonly string _connectionString;
        public DatabaseInitializer(string databasePath)
        {
            _databasePath = databasePath;
            _connectionString = $"Server=localhost; Database={_databasePath}; User=SYSDBA; Password=masterkey; Charset=UTF8;";
        }
        public FbConnection GetConnection()
        {
            if (!File.Exists(_databasePath))
            {
                CreateDataBase();
            }
            var connection = new FbConnection(_connectionString);
            connection.Open();
            return connection;
        }
        private void CreateDataBase()
        {
            try
            {
                FbConnection.CreateDatabase(_connectionString);
                CreateConfigTable();
                //CreateAdminUserTable();
                CreateNotificationLogTable();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error creating database: {ex.Message}");
                throw;
            }
        }

        private void CreateConfigTable()
        {
            using (var connection = new FbConnection(_connectionString))
            {
                connection.Open();
                connection.Execute(@"
                    CREATE TABLE CONFIG_INFO (
                        CONFIG_KEY VARCHAR(100) NOT NULL PRIMARY KEY,
                        CONFIG_VALUE VARCHAR(255) NOT NULL
                    );"
                );
            }
        }

        public void CreateNotificationLogTable()
        {
            using var connection = new FbConnection(_connectionString);
            connection.Open();
            connection.Execute(@"
                CREATE TABLE NOTIFICATION_LOG (
                    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    MESSAGE VARCHAR(500),
                    TYPE VARCHAR(20),
                    USERNAME VARCHAR(100),
                    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );");
        }
       
    }
}
