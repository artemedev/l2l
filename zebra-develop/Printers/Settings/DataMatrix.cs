namespace MD.Aggregation.Devices.Printer.Settings;

/// <summary>
/// Двумерная матричная символика, состоящая из квадратных модулей, расположенных в пределах шаблона определения периметра.
/// </summary>
public class DataMatrix
{
    /// <summary>
    /// Ориентация. Допустимые значения: N = нормальная; R = поворот на 90° (по часовой стрелке); I = перевернутая, 180°; B = чтение снизу вверх, 270°.
    /// </summary>
    public string Orientation { get; set; } = "N";

    /// <summary>
    /// Высота отдельных элементов символа. Допустимые значения: от 1 до ширины этикетки.
    /// </summary>
    public int Height { get; set; } = 6;

    /// <summary>
    /// Уровень качества. Принятые значения: 0, 50, 80, 100, 140, 200
    /// </summary>
    public int Quality { get; set; } = 200;

    /// <summary>
    /// Столбцы для кодирования. Допустимые значения: от 9 до 49. Нечетные значения только для качества от 0 до 140 (от 10 до 144); Четные значения только для качества 200.
    /// </summary>
    public int CodingColumns { get; set; } = 36;


    /// <summary>
    /// Строки для кодирования. Допустимые значения: от 9 до 49
    /// </summary>
    public int CodingRows { get; set; } = 36;

    /// <summary>
    /// Идентификатор формата(от 0 до 6), не используется для качества 200. Допустимые значения: 1 = данные поля: цифры + пробел(0..9,”) — без \&’; 2 = данные поля: буквенно-цифровые в верхнем регистре + пробел(A..Z,’) — без \&’; 3 = данные поля: буквенно-цифровые в верхнем регистре + пробел, точка, запятая, тире и косая черта(0..9, A..Z,“.-/”); 152 Параметры Подробная информация 4 = данные поля: буквенно-цифровые в верхнем регистре + пробел(0..9, A..Z,’) — без \&’; 5 = данные поля: полный набор из 128 7-разрядных символов ASCII; 6 = данные поля: полный 8-разрядный набор ISO 256.
    /// </summary>
    public string Format { get; set; } = "";

    /// <summary>
    /// Управляющий символ escape-последовательности. Допустимые значения: любой символ
    /// </summary>
    public string ControlChar { get; set; } = "_";

    /// <summary>
    ///  Соотношение сторон Допустимые значения: 1 = квадрат; 2 = прямоугольник.
    /// </summary>
    public int AspectRatio { get; set; } = 1;
}

