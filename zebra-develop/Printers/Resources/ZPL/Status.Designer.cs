//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MD.Aggregation.Devices.Printer.Resources.ZPL {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Status {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Status() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MD.Aggregation.Devices.Printer.Resources.ZPL.Status", typeof(Status).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг формата при печати&quot;: {0}..
        /// </summary>
        internal static string DbfFormatWhilePrintingFlag {
            get {
                return ResourceManager.GetString("DbfFormatWhilePrintingFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг поднятия головы&quot;: {0}..
        /// </summary>
        internal static string DbfHeadUpFlag {
            get {
                return ResourceManager.GetString("DbfHeadUpFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг ожидания этикетки&quot;: {0}..
        /// </summary>
        internal static string DbfLabelWaitingFlag {
            get {
                return ResourceManager.GetString("DbfLabelWaitingFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг выхода ленты&quot;: {0}..
        /// </summary>
        internal static string DbfRibbonOutFlag {
            get {
                return ResourceManager.GetString("DbfRibbonOutFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг режима термопереноса&quot;: {0}..
        /// </summary>
        internal static string DbfThermalTransferModeFlag {
            get {
                return ResourceManager.GetString("DbfThermalTransferModeFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг заполнения буфера&quot;: {0}..
        /// </summary>
        internal static string DbgBufferFullFlag {
            get {
                return ResourceManager.GetString("DbgBufferFullFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг повреждения оперативной памяти&quot;: {0}..
        /// </summary>
        internal static string DbgCorruptRamFlag {
            get {
                return ResourceManager.GetString("DbgCorruptRamFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг диагностического режима связи&quot;: {0}..
        /// </summary>
        internal static string DbgDiagnosticModeFlag {
            get {
                return ResourceManager.GetString("DbgDiagnosticModeFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Количество форматов в буфере приема&quot;: {0}..
        /// </summary>
        internal static string DbgFormatsInBuffer {
            get {
                return ResourceManager.GetString("DbgFormatsInBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг установки статической RAM&quot;: {0}..
        /// </summary>
        internal static string DbgIsStaticRamInstalled {
            get {
                return ResourceManager.GetString("DbgIsStaticRamInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Длина метки(количество точек)&quot;: {0}..
        /// </summary>
        internal static string DbgLabelLength {
            get {
                return ResourceManager.GetString("DbgLabelLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Этикетки, оставшиеся в партии&quot;: {0}..
        /// </summary>
        internal static string DbgLabelsRemainingInBatch {
            get {
                return ResourceManager.GetString("DbgLabelsRemainingInBatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Количество графических изображений, хранящихся в памяти&quot;: {0}..
        /// </summary>
        internal static string DbgNumberOfGraphicImages {
            get {
                return ResourceManager.GetString("DbgNumberOfGraphicImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Температурный диапазон(перегрев)&quot;: {0}..
        /// </summary>
        internal static string DbgOverTemperatureFlag {
            get {
                return ResourceManager.GetString("DbgOverTemperatureFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Станица вышла&quot;: {0}..
        /// </summary>
        internal static string DbgPaperOutFlag {
            get {
                return ResourceManager.GetString("DbgPaperOutFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Строка 1 успешно распарсина..
        /// </summary>
        internal static string DbgParsingString1 {
            get {
                return ResourceManager.GetString("DbgParsingString1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Строка 2 успешно распарсина..
        /// </summary>
        internal static string DbgParsingString2 {
            get {
                return ResourceManager.GetString("DbgParsingString2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Строка 3 успешно распарсина..
        /// </summary>
        internal static string DbgParsingString3 {
            get {
                return ResourceManager.GetString("DbgParsingString3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Флаг частичного форматирования&quot;: {0}..
        /// </summary>
        internal static string DbgPartialFormatFlag {
            get {
                return ResourceManager.GetString("DbgPartialFormatFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Пароль&quot;: {0}..
        /// </summary>
        internal static string DbgPassword {
            get {
                return ResourceManager.GetString("DbgPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Пауза&quot;: {0}..
        /// </summary>
        internal static string DbgPauseFlag {
            get {
                return ResourceManager.GetString("DbgPauseFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Режим печати&quot;: {0}..
        /// </summary>
        internal static string DbgPrintMode {
            get {
                return ResourceManager.GetString("DbgPrintMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Режим ширины печати&quot;: {0}..
        /// </summary>
        internal static string DbgPrintWidthMode {
            get {
                return ResourceManager.GetString("DbgPrintWidthMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра &quot;Температурный диапазон(пониженная температура)&quot;: {0}..
        /// </summary>
        internal static string DbgUnderTemperatureFlag {
            get {
                return ResourceManager.GetString("DbgUnderTemperatureFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Байтовый буфер равен null..
        /// </summary>
        internal static string ErrByteBufNull {
            get {
                return ResourceManager.GetString("ErrByteBufNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить число из строки &apos;{0}&apos; для параметра &quot;Количество форматов в буфере приема&quot;..
        /// </summary>
        internal static string ErrFormatsInBuffer {
            get {
                return ResourceManager.GetString("ErrFormatsInBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить число из строки &apos;{0}&apos; для параметра &quot;Длина метки(количество точек)&quot;..
        /// </summary>
        internal static string ErrLabelLength {
            get {
                return ResourceManager.GetString("ErrLabelLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить число из строки &apos;{0}&apos; для параметра &quot;Этикетки, оставшиеся в партии&quot;..
        /// </summary>
        internal static string ErrLabelsRemainingInBatch {
            get {
                return ResourceManager.GetString("ErrLabelsRemainingInBatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на При парсинге получено не верное количество строк. Должно быть 4, а получено {0}..
        /// </summary>
        internal static string ErrLinesLen {
            get {
                return ResourceManager.GetString("ErrLinesLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить число из строки &apos;{0}&apos; для параметра &quot;Количество графических изображений, хранящихся в памяти&quot;..
        /// </summary>
        internal static string ErrNumberOfGraphicImages {
            get {
                return ResourceManager.GetString("ErrNumberOfGraphicImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверное количество значений в строке 1. Должно быть 12, а не {0}..
        /// </summary>
        internal static string ErrParamLen1 {
            get {
                return ResourceManager.GetString("ErrParamLen1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверное количество значений в строке 2. Должно быть 11, а не {0}..
        /// </summary>
        internal static string ErrParamLen2 {
            get {
                return ResourceManager.GetString("ErrParamLen2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверное количество значений в строке 2. Должно быть 2, а не {0}..
        /// </summary>
        internal static string ErrParamLen3 {
            get {
                return ResourceManager.GetString("ErrParamLen3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка парсинга строки 1..
        /// </summary>
        internal static string ErrParsingString1 {
            get {
                return ResourceManager.GetString("ErrParsingString1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка парсинга строки 2..
        /// </summary>
        internal static string ErrParsingString2 {
            get {
                return ResourceManager.GetString("ErrParsingString2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка парсинга строки 3..
        /// </summary>
        internal static string ErrParsingString3 {
            get {
                return ResourceManager.GetString("ErrParsingString3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить число из строки &apos;{0}&apos; для параметра &quot;Режим печати&quot;..
        /// </summary>
        internal static string ErrPrintMode {
            get {
                return ResourceManager.GetString("ErrPrintMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось преобразовать число в enum: {0}.
        /// </summary>
        internal static string ErrPrintModeEnum {
            get {
                return ResourceManager.GetString("ErrPrintModeEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить число из строки &apos;{0}&apos; для параметра &quot;Режим ширины печати&quot;..
        /// </summary>
        internal static string ErrPrintWidthMode {
            get {
                return ResourceManager.GetString("ErrPrintWidthMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверный символ начала и(или) конца у строки 1..
        /// </summary>
        internal static string ErrStartEnd1 {
            get {
                return ResourceManager.GetString("ErrStartEnd1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверный символ начала и(или) конца у строки 2..
        /// </summary>
        internal static string ErrStartEnd2 {
            get {
                return ResourceManager.GetString("ErrStartEnd2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверный символ начала и(или) конца у строки 3..
        /// </summary>
        internal static string ErrStartEnd3 {
            get {
                return ResourceManager.GetString("ErrStartEnd3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось распарсить полученные данные в байтовом буфере: {0}..
        /// </summary>
        internal static string ExpParsing {
            get {
                return ResourceManager.GetString("ExpParsing", resourceCulture);
            }
        }
    }
}
